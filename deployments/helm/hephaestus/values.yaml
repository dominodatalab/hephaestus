# Global parameters applied to all images in this chart
global:
  imageRegistry: ""
  imagePullSecrets: []

# Replace the name of the chart defined in Chart.yaml
nameOverride: ""

# Replace the generated name (release+chart name)
fullnameOverride: ""

# If true, CRD resources will be installed/uninstalled as part of the Helm chart release.
# Uninstalling CRD resources will DELETE all related custom resources.
installCRDs: true

# Restrict network access to controller and buildkit pods
enableNetworkPolicies: true

# Creates policy/RBAC rules that allow this application to function when the PSP admission controller is enabled.
# This flag will have no effect in k8s >= 1.25.
enablePodSecurityPolicies: false

# Namespace where cert-manager is deployed. CA certificate secret needs to live in the cluster resource namespace.
# https://cert-manager.io/docs/faq/cluster-resource/
certManagerNamespace: cert-manager

# Istio configuration
istio:
  # Enable support for environments with Istio installed
  enabled: false
  # Elevate pod execution permissions so that Istio's init container can modify
  # network settings when CNI plugin is NOT installed.
  cni: false

# Controller manager configuration
controller:
  # Controller manager image
  # The default image tag is the chart appVersion.
  image:
    registry: ghcr.io
    repository: dominodatalab/hephaestus
    tag: ""
    pullPolicy: IfNotPresent
    pullSecrets: []

  # Build status messaging configuration
  messaging:
    # Enable message publisher
    enabled: false
    # Remote AMQP server configuration
    amqp:
      url: "amqp://user:password@rabbitmq.default:5672"
      exchange: ""
      queue: "hephaestus.imagebuilds.status"
    # Remote Kafka cluster configuration
    kafka: {}

  # Manager logging configuration
  logging:
    # Level at which stacktraces are printed can be either 'info', 'error', or 'panic'
    stacktraceLevel: error
    # Logs sent to stdout/stderr
    container:
      # Level can be 'debug', 'info', 'error', or any integer value >= 0 which corresponds to custom debug levels of increasing verbosity
      level: info
      # Defaults to 'console' but can also be 'json'
      encoding: console
    # Logs sent to JSON file for post-processing. These logs are only produced when log processor is enabled
    logfile:
      level: info

  # Maximum number of concurrent builds which can be run
  imageBuildMaxConcurrency: 5

  # Webhook server port
  webhookPort: 9443

  # Prometheus metric ports
  metricsPort: 8080

  # Health probe port
  healthProbePort: 8081

  # Limit watch to a specific set of namespaces, default is all namespaces
  watchNamespaces: []

  # Duration after which buildkit cluster is inspected for idle pods
  # Defaults to "1m"
  poolSyncWaitTime: null

  # Duration after which idle buildkit pods will be terminated
  # Defaults to "10m"
  poolMaxIdleTime: null

  # Secrets (name: path) to expose into builds that request it
  secrets: {}

  # Resource requests and limits
  resources:
    requests: {}
    limits: {}

  # Metrics configuration for the manager
  metrics:
    # Enable the export of prometheus metrics
    enabled: true
    # Allow ingress traffic from prometheus pods with the following labels
    podLabels:
      app.kubernetes.io/name: prometheus
    # Namespace labels where prometheus is running if different from app's namespace
    namespaceLabels: {}

  # Configure pod security context
  podSecurityContext: {}

  # Configure container security context
  containerSecurityContext: {}

  # Extra labels for manager pods
  podLabels: {}

  # Annotations for manager pods
  podAnnotations: {}

  # Tolerations for manager pod assignment
  tolerations: []

  # Affinities for manager pod assignment
  affinity: {}

  # Node labels for manager pod assignment
  nodeSelector: {}

  # Manager pods priorityClassName
  priorityClassName: ""

  # Additional volume mounts
  extraVolumeMounts: []

  # Additional volumes
  extraVolumes: []

  # Number of manager instances to run. Leader election will be enabled
  # whenever this value is greater than 1; this ensures that only one instance
  # is active at a time.
  replicaCount: 1

  # Service account configuration
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

# Log processor configuration
logProcessor:
  # Log processor image
  image:
    registry: ""
    repository: timberio/vector
    tag: 0.21.X-distroless-static
    pullPolicy: IfNotPresent
    pullSecrets: []

  # Enable the deployment of the log processing sidecar
  enabled: true

  # Resource requests and limits
  resources:
    requests: {}
    limits: {}

  # Configure the transformation and delivery of your logs using "hephaestus_output" as the name of your input
  config:
    # See https://vector.dev/docs/reference/configuration/transforms/
    transforms: {}
    # See https://vector.dev/docs/reference/configuration/sinks/
    sinks:
      stdout:
        type: console
        inputs:
          - hephaestus_output
        encoding:
          codec: json

  # Additional volume mounts into log processor container. Volumes are listed
  # in controller.extraVolumes since the two containers live in the same pod.
  extraVolumeMounts: []

# Buildkit cluster configuration
buildkit:
  # Run buildkit in rootless mode
  rootless: true

  # Amount of storage GC keeps locally (bytes). This value should be less than the
  # total amount of available persistent storage (e.g. 75% of 20Gi)
  gcKeepStorage: 15000000000

  # Enable debug logging
  debug: false

  # Add a ConfigMap containing custom CAs if you need to push images to one or
  # more registries that use self-signed certificates
  customCABundle: ""

  # Deploy buildkit workload into a different namespace from the release
  namespace: ""

  # The buildkit network policy will select against all the labels on the
  # release namespace to allow ingress traffic from the controller by default.
  # Use this field to limit the selector labels
  releaseNamespaceLabels: {}

  # Buildkit image
  image:
    registry: ""
    repository: moby/buildkit
    tag: v0.10.3-rootless
    pullPolicy: IfNotPresent
    pullSecrets: []

  # Peristent build cache settings
  persistence:
    enabled: true
    storageClass: ""
    accessModes:
      - ReadWriteOnce
    size: 20Gi
    annotations: {}

  # Resource requests and limits
  resources:
    requests: {}
    limits: {}

  # Control client/server mTLS settings
  mtls:
    enabled: true

  # gRPC API service settings
  service:
    type: ClusterIP
    port: 1234
    portName: daemon

  # Service account configuration
  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  # Number of buildkit pods to run
  replicaCount: 0

  # Extra labels for buildkit pods
  podLabels: {}

  # Annotations for buildkit pods
  podAnnotations: {}

  # Tolerations for buildkit pod assignment
  tolerations: []

  # Node labels for buildkit pod assignment
  nodeSelector: {}

  # Buildkit pods priorityClassName
  priorityClassName: ""

  # Affinities for buildkit pod assignment
  affinity: |-
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
        - weight: 50
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - {{ .Chart.Name }}
            topologyKey: "topology.kubernetes.io/zone"
        - weight: 100
          podAffinityTerm:
            labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                    - {{ .Release.Name }}
                - key: app.kubernetes.io/name
                  operator: In
                  values:
                    - {{ .Chart.Name }}
            topologyKey: "kubernetes.io/hostname"
